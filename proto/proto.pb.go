// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto.proto

It has these top-level messages:
	State
	Event
	Query
	Msg
	Attribute
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type State struct {
	Time             *int64   `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	State            *string  `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	Service          *string  `protobuf:"bytes,3,opt,name=service" json:"service,omitempty"`
	Host             *string  `protobuf:"bytes,4,opt,name=host" json:"host,omitempty"`
	Description      *string  `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Once             *bool    `protobuf:"varint,6,opt,name=once" json:"once,omitempty"`
	Tags             []string `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
	Ttl              *float32 `protobuf:"fixed32,8,opt,name=ttl" json:"ttl,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *State) Reset()                    { *m = State{} }
func (m *State) String() string            { return proto1.CompactTextString(m) }
func (*State) ProtoMessage()               {}
func (*State) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *State) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *State) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *State) GetService() string {
	if m != nil && m.Service != nil {
		return *m.Service
	}
	return ""
}

func (m *State) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *State) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *State) GetOnce() bool {
	if m != nil && m.Once != nil {
		return *m.Once
	}
	return false
}

func (m *State) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *State) GetTtl() float32 {
	if m != nil && m.Ttl != nil {
		return *m.Ttl
	}
	return 0
}

type Event struct {
	Time             *int64       `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	State            *string      `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	Service          *string      `protobuf:"bytes,3,opt,name=service" json:"service,omitempty"`
	Host             *string      `protobuf:"bytes,4,opt,name=host" json:"host,omitempty"`
	Description      *string      `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Tags             []string     `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
	Ttl              *float32     `protobuf:"fixed32,8,opt,name=ttl" json:"ttl,omitempty"`
	Attributes       []*Attribute `protobuf:"bytes,9,rep,name=attributes" json:"attributes,omitempty"`
	MetricSint64     *int64       `protobuf:"zigzag64,13,opt,name=metric_sint64,json=metricSint64" json:"metric_sint64,omitempty"`
	MetricD          *float64     `protobuf:"fixed64,14,opt,name=metric_d,json=metricD" json:"metric_d,omitempty"`
	MetricF          *float32     `protobuf:"fixed32,15,opt,name=metric_f,json=metricF" json:"metric_f,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto1.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Event) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *Event) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Event) GetService() string {
	if m != nil && m.Service != nil {
		return *m.Service
	}
	return ""
}

func (m *Event) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *Event) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Event) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event) GetTtl() float32 {
	if m != nil && m.Ttl != nil {
		return *m.Ttl
	}
	return 0
}

func (m *Event) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Event) GetMetricSint64() int64 {
	if m != nil && m.MetricSint64 != nil {
		return *m.MetricSint64
	}
	return 0
}

func (m *Event) GetMetricD() float64 {
	if m != nil && m.MetricD != nil {
		return *m.MetricD
	}
	return 0
}

func (m *Event) GetMetricF() float32 {
	if m != nil && m.MetricF != nil {
		return *m.MetricF
	}
	return 0
}

type Query struct {
	String_          *string `protobuf:"bytes,1,opt,name=string" json:"string,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto1.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Query) GetString_() string {
	if m != nil && m.String_ != nil {
		return *m.String_
	}
	return ""
}

type Msg struct {
	Ok               *bool    `protobuf:"varint,2,opt,name=ok" json:"ok,omitempty"`
	Error            *string  `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	States           []*State `protobuf:"bytes,4,rep,name=states" json:"states,omitempty"`
	Query            *Query   `protobuf:"bytes,5,opt,name=query" json:"query,omitempty"`
	Events           []*Event `protobuf:"bytes,6,rep,name=events" json:"events,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Msg) Reset()                    { *m = Msg{} }
func (m *Msg) String() string            { return proto1.CompactTextString(m) }
func (*Msg) ProtoMessage()               {}
func (*Msg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Msg) GetOk() bool {
	if m != nil && m.Ok != nil {
		return *m.Ok
	}
	return false
}

func (m *Msg) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *Msg) GetStates() []*State {
	if m != nil {
		return m.States
	}
	return nil
}

func (m *Msg) GetQuery() *Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *Msg) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type Attribute struct {
	Key              *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Attribute) Reset()                    { *m = Attribute{} }
func (m *Attribute) String() string            { return proto1.CompactTextString(m) }
func (*Attribute) ProtoMessage()               {}
func (*Attribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Attribute) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Attribute) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func init() {
	proto1.RegisterType((*State)(nil), "State")
	proto1.RegisterType((*Event)(nil), "Event")
	proto1.RegisterType((*Query)(nil), "Query")
	proto1.RegisterType((*Msg)(nil), "Msg")
	proto1.RegisterType((*Attribute)(nil), "Attribute")
}

func init() { proto1.RegisterFile("proto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 374 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x52, 0xbd, 0x6e, 0xdb, 0x30,
	0x10, 0x06, 0x25, 0x4b, 0x96, 0xce, 0xb5, 0x5b, 0x10, 0x45, 0xc1, 0x02, 0x45, 0x4b, 0xa8, 0x0b,
	0xd1, 0xc1, 0x43, 0x13, 0x64, 0x0f, 0x90, 0x64, 0xcb, 0x10, 0xfa, 0x01, 0x02, 0x45, 0x66, 0x1c,
	0xc2, 0xb6, 0xe8, 0x90, 0xb4, 0x01, 0x3f, 0x42, 0x5e, 0x26, 0x2f, 0x90, 0x97, 0x0b, 0xee, 0x24,
	0x1b, 0xde, 0x32, 0x66, 0x11, 0xbe, 0x1f, 0xdd, 0xf1, 0xf8, 0x1d, 0x61, 0xb4, 0xf1, 0x2e, 0xba,
	0x29, 0x7d, 0xab, 0x37, 0x06, 0xd9, 0x2c, 0xd6, 0xd1, 0x70, 0x0e, 0x83, 0x68, 0xd7, 0x46, 0x30,
	0xc9, 0x54, 0xaa, 0x09, 0xf3, 0xef, 0x90, 0x05, 0x34, 0x45, 0x22, 0x99, 0x2a, 0x75, 0x47, 0xb8,
	0x80, 0x61, 0x30, 0x7e, 0x67, 0x1b, 0x23, 0x52, 0xd2, 0x0f, 0x14, 0x7b, 0x3c, 0xb9, 0x10, 0xc5,
	0x80, 0x64, 0xc2, 0x5c, 0xc2, 0x68, 0x6e, 0x42, 0xe3, 0xed, 0x26, 0x5a, 0xd7, 0x8a, 0x8c, 0xac,
	0x53, 0x09, 0xab, 0x5c, 0xdb, 0x18, 0x91, 0x4b, 0xa6, 0x0a, 0x4d, 0x98, 0xa6, 0xa9, 0x17, 0x41,
	0x0c, 0x65, 0x8a, 0x9d, 0x10, 0xf3, 0x6f, 0x90, 0xc6, 0xb8, 0x12, 0x85, 0x64, 0x2a, 0xd1, 0x08,
	0xab, 0xd7, 0x04, 0xb2, 0xeb, 0x9d, 0x69, 0xe3, 0xe7, 0x4e, 0xff, 0xf1, 0xa4, 0xfc, 0x1f, 0x40,
	0x1d, 0xa3, 0xb7, 0x0f, 0xdb, 0x68, 0x82, 0x28, 0x65, 0xaa, 0x46, 0xff, 0x61, 0x7a, 0x79, 0x90,
	0xf4, 0x89, 0xcb, 0xff, 0xc2, 0x78, 0x6d, 0xa2, 0xb7, 0xcd, 0x7d, 0xb0, 0x6d, 0xbc, 0x38, 0x17,
	0x63, 0xc9, 0x14, 0xd7, 0x5f, 0x3a, 0x71, 0x46, 0x1a, 0xff, 0x09, 0x45, 0xff, 0xd3, 0x5c, 0x4c,
	0x24, 0x53, 0x4c, 0x0f, 0x3b, 0x7e, 0x75, 0x62, 0x3d, 0x8a, 0xaf, 0x34, 0x42, 0x6f, 0xdd, 0x54,
	0x7f, 0x20, 0xbb, 0xdb, 0x1a, 0xbf, 0xe7, 0x3f, 0x20, 0x0f, 0xd1, 0xdb, 0x76, 0x41, 0x89, 0x95,
	0xba, 0x67, 0xd5, 0x0b, 0x83, 0xf4, 0x36, 0x2c, 0xf8, 0x04, 0x12, 0xb7, 0xa4, 0xe0, 0x0a, 0x9d,
	0xb8, 0x25, 0x66, 0x69, 0xbc, 0x77, 0xbe, 0xcf, 0xac, 0x23, 0xfc, 0x37, 0x76, 0xa9, 0xf1, 0x46,
	0x03, 0xba, 0x51, 0x3e, 0xa5, 0xb7, 0xa4, 0x7b, 0x95, 0xff, 0x82, 0xec, 0x19, 0x8f, 0xa3, 0xdc,
	0xd0, 0xa6, 0xc3, 0x75, 0x27, 0x62, 0xb5, 0xc1, 0xe5, 0x05, 0x91, 0xf7, 0xd5, 0xb4, 0x4b, 0xdd,
	0xab, 0xd5, 0x19, 0x94, 0xc7, 0x80, 0x30, 0xd2, 0xa5, 0xd9, 0x0b, 0x26, 0x13, 0x55, 0x6a, 0x84,
	0x38, 0xd2, 0xae, 0x5e, 0x6d, 0x8f, 0xeb, 0x25, 0xf2, 0x1e, 0x00, 0x00, 0xff, 0xff, 0xc4, 0x59,
	0x2e, 0xc9, 0xde, 0x02, 0x00, 0x00,
}
