// Code generated by github.com/efritz/go-mockgen; DO NOT EDIT.
// This file was generated by robots at
// 2018-10-15T14:02:31-05:00
// using the command
// $ go-mockgen -f github.com/aws/aws-sdk-go/service/cloudwatch/cloudwatchiface -i CloudWatchAPI

package mocks

import (
	aws "github.com/aws/aws-sdk-go/aws"
	request "github.com/aws/aws-sdk-go/aws/request"
	cloudwatch "github.com/aws/aws-sdk-go/service/cloudwatch"
	"sync"
)

type MockCloudWatchAPI struct {
	DeleteAlarmsFunc                                     func(*cloudwatch.DeleteAlarmsInput) (*cloudwatch.DeleteAlarmsOutput, error)
	_DeleteAlarmsFuncCallHistory                         []CloudWatchAPIDeleteAlarmsParamSet
	DeleteAlarmsRequestFunc                              func(*cloudwatch.DeleteAlarmsInput) (*request.Request, *cloudwatch.DeleteAlarmsOutput)
	_DeleteAlarmsRequestFuncCallHistory                  []CloudWatchAPIDeleteAlarmsRequestParamSet
	DeleteAlarmsWithContextFunc                          func(aws.Context, *cloudwatch.DeleteAlarmsInput, ...request.Option) (*cloudwatch.DeleteAlarmsOutput, error)
	_DeleteAlarmsWithContextFuncCallHistory              []CloudWatchAPIDeleteAlarmsWithContextParamSet
	DeleteDashboardsFunc                                 func(*cloudwatch.DeleteDashboardsInput) (*cloudwatch.DeleteDashboardsOutput, error)
	_DeleteDashboardsFuncCallHistory                     []CloudWatchAPIDeleteDashboardsParamSet
	DeleteDashboardsRequestFunc                          func(*cloudwatch.DeleteDashboardsInput) (*request.Request, *cloudwatch.DeleteDashboardsOutput)
	_DeleteDashboardsRequestFuncCallHistory              []CloudWatchAPIDeleteDashboardsRequestParamSet
	DeleteDashboardsWithContextFunc                      func(aws.Context, *cloudwatch.DeleteDashboardsInput, ...request.Option) (*cloudwatch.DeleteDashboardsOutput, error)
	_DeleteDashboardsWithContextFuncCallHistory          []CloudWatchAPIDeleteDashboardsWithContextParamSet
	DescribeAlarmHistoryFunc                             func(*cloudwatch.DescribeAlarmHistoryInput) (*cloudwatch.DescribeAlarmHistoryOutput, error)
	_DescribeAlarmHistoryFuncCallHistory                 []CloudWatchAPIDescribeAlarmHistoryParamSet
	DescribeAlarmHistoryPagesFunc                        func(*cloudwatch.DescribeAlarmHistoryInput, func(*cloudwatch.DescribeAlarmHistoryOutput, bool) bool) error
	_DescribeAlarmHistoryPagesFuncCallHistory            []CloudWatchAPIDescribeAlarmHistoryPagesParamSet
	DescribeAlarmHistoryPagesWithContextFunc             func(aws.Context, *cloudwatch.DescribeAlarmHistoryInput, func(*cloudwatch.DescribeAlarmHistoryOutput, bool) bool, ...request.Option) error
	_DescribeAlarmHistoryPagesWithContextFuncCallHistory []CloudWatchAPIDescribeAlarmHistoryPagesWithContextParamSet
	DescribeAlarmHistoryRequestFunc                      func(*cloudwatch.DescribeAlarmHistoryInput) (*request.Request, *cloudwatch.DescribeAlarmHistoryOutput)
	_DescribeAlarmHistoryRequestFuncCallHistory          []CloudWatchAPIDescribeAlarmHistoryRequestParamSet
	DescribeAlarmHistoryWithContextFunc                  func(aws.Context, *cloudwatch.DescribeAlarmHistoryInput, ...request.Option) (*cloudwatch.DescribeAlarmHistoryOutput, error)
	_DescribeAlarmHistoryWithContextFuncCallHistory      []CloudWatchAPIDescribeAlarmHistoryWithContextParamSet
	DescribeAlarmsFunc                                   func(*cloudwatch.DescribeAlarmsInput) (*cloudwatch.DescribeAlarmsOutput, error)
	_DescribeAlarmsFuncCallHistory                       []CloudWatchAPIDescribeAlarmsParamSet
	DescribeAlarmsForMetricFunc                          func(*cloudwatch.DescribeAlarmsForMetricInput) (*cloudwatch.DescribeAlarmsForMetricOutput, error)
	_DescribeAlarmsForMetricFuncCallHistory              []CloudWatchAPIDescribeAlarmsForMetricParamSet
	DescribeAlarmsForMetricRequestFunc                   func(*cloudwatch.DescribeAlarmsForMetricInput) (*request.Request, *cloudwatch.DescribeAlarmsForMetricOutput)
	_DescribeAlarmsForMetricRequestFuncCallHistory       []CloudWatchAPIDescribeAlarmsForMetricRequestParamSet
	DescribeAlarmsForMetricWithContextFunc               func(aws.Context, *cloudwatch.DescribeAlarmsForMetricInput, ...request.Option) (*cloudwatch.DescribeAlarmsForMetricOutput, error)
	_DescribeAlarmsForMetricWithContextFuncCallHistory   []CloudWatchAPIDescribeAlarmsForMetricWithContextParamSet
	DescribeAlarmsPagesFunc                              func(*cloudwatch.DescribeAlarmsInput, func(*cloudwatch.DescribeAlarmsOutput, bool) bool) error
	_DescribeAlarmsPagesFuncCallHistory                  []CloudWatchAPIDescribeAlarmsPagesParamSet
	DescribeAlarmsPagesWithContextFunc                   func(aws.Context, *cloudwatch.DescribeAlarmsInput, func(*cloudwatch.DescribeAlarmsOutput, bool) bool, ...request.Option) error
	_DescribeAlarmsPagesWithContextFuncCallHistory       []CloudWatchAPIDescribeAlarmsPagesWithContextParamSet
	DescribeAlarmsRequestFunc                            func(*cloudwatch.DescribeAlarmsInput) (*request.Request, *cloudwatch.DescribeAlarmsOutput)
	_DescribeAlarmsRequestFuncCallHistory                []CloudWatchAPIDescribeAlarmsRequestParamSet
	DescribeAlarmsWithContextFunc                        func(aws.Context, *cloudwatch.DescribeAlarmsInput, ...request.Option) (*cloudwatch.DescribeAlarmsOutput, error)
	_DescribeAlarmsWithContextFuncCallHistory            []CloudWatchAPIDescribeAlarmsWithContextParamSet
	DisableAlarmActionsFunc                              func(*cloudwatch.DisableAlarmActionsInput) (*cloudwatch.DisableAlarmActionsOutput, error)
	_DisableAlarmActionsFuncCallHistory                  []CloudWatchAPIDisableAlarmActionsParamSet
	DisableAlarmActionsRequestFunc                       func(*cloudwatch.DisableAlarmActionsInput) (*request.Request, *cloudwatch.DisableAlarmActionsOutput)
	_DisableAlarmActionsRequestFuncCallHistory           []CloudWatchAPIDisableAlarmActionsRequestParamSet
	DisableAlarmActionsWithContextFunc                   func(aws.Context, *cloudwatch.DisableAlarmActionsInput, ...request.Option) (*cloudwatch.DisableAlarmActionsOutput, error)
	_DisableAlarmActionsWithContextFuncCallHistory       []CloudWatchAPIDisableAlarmActionsWithContextParamSet
	EnableAlarmActionsFunc                               func(*cloudwatch.EnableAlarmActionsInput) (*cloudwatch.EnableAlarmActionsOutput, error)
	_EnableAlarmActionsFuncCallHistory                   []CloudWatchAPIEnableAlarmActionsParamSet
	EnableAlarmActionsRequestFunc                        func(*cloudwatch.EnableAlarmActionsInput) (*request.Request, *cloudwatch.EnableAlarmActionsOutput)
	_EnableAlarmActionsRequestFuncCallHistory            []CloudWatchAPIEnableAlarmActionsRequestParamSet
	EnableAlarmActionsWithContextFunc                    func(aws.Context, *cloudwatch.EnableAlarmActionsInput, ...request.Option) (*cloudwatch.EnableAlarmActionsOutput, error)
	_EnableAlarmActionsWithContextFuncCallHistory        []CloudWatchAPIEnableAlarmActionsWithContextParamSet
	GetDashboardFunc                                     func(*cloudwatch.GetDashboardInput) (*cloudwatch.GetDashboardOutput, error)
	_GetDashboardFuncCallHistory                         []CloudWatchAPIGetDashboardParamSet
	GetDashboardRequestFunc                              func(*cloudwatch.GetDashboardInput) (*request.Request, *cloudwatch.GetDashboardOutput)
	_GetDashboardRequestFuncCallHistory                  []CloudWatchAPIGetDashboardRequestParamSet
	GetDashboardWithContextFunc                          func(aws.Context, *cloudwatch.GetDashboardInput, ...request.Option) (*cloudwatch.GetDashboardOutput, error)
	_GetDashboardWithContextFuncCallHistory              []CloudWatchAPIGetDashboardWithContextParamSet
	GetMetricDataFunc                                    func(*cloudwatch.GetMetricDataInput) (*cloudwatch.GetMetricDataOutput, error)
	_GetMetricDataFuncCallHistory                        []CloudWatchAPIGetMetricDataParamSet
	GetMetricDataRequestFunc                             func(*cloudwatch.GetMetricDataInput) (*request.Request, *cloudwatch.GetMetricDataOutput)
	_GetMetricDataRequestFuncCallHistory                 []CloudWatchAPIGetMetricDataRequestParamSet
	GetMetricDataWithContextFunc                         func(aws.Context, *cloudwatch.GetMetricDataInput, ...request.Option) (*cloudwatch.GetMetricDataOutput, error)
	_GetMetricDataWithContextFuncCallHistory             []CloudWatchAPIGetMetricDataWithContextParamSet
	GetMetricStatisticsFunc                              func(*cloudwatch.GetMetricStatisticsInput) (*cloudwatch.GetMetricStatisticsOutput, error)
	_GetMetricStatisticsFuncCallHistory                  []CloudWatchAPIGetMetricStatisticsParamSet
	GetMetricStatisticsRequestFunc                       func(*cloudwatch.GetMetricStatisticsInput) (*request.Request, *cloudwatch.GetMetricStatisticsOutput)
	_GetMetricStatisticsRequestFuncCallHistory           []CloudWatchAPIGetMetricStatisticsRequestParamSet
	GetMetricStatisticsWithContextFunc                   func(aws.Context, *cloudwatch.GetMetricStatisticsInput, ...request.Option) (*cloudwatch.GetMetricStatisticsOutput, error)
	_GetMetricStatisticsWithContextFuncCallHistory       []CloudWatchAPIGetMetricStatisticsWithContextParamSet
	GetMetricWidgetImageFunc                             func(*cloudwatch.GetMetricWidgetImageInput) (*cloudwatch.GetMetricWidgetImageOutput, error)
	_GetMetricWidgetImageFuncCallHistory                 []CloudWatchAPIGetMetricWidgetImageParamSet
	GetMetricWidgetImageRequestFunc                      func(*cloudwatch.GetMetricWidgetImageInput) (*request.Request, *cloudwatch.GetMetricWidgetImageOutput)
	_GetMetricWidgetImageRequestFuncCallHistory          []CloudWatchAPIGetMetricWidgetImageRequestParamSet
	GetMetricWidgetImageWithContextFunc                  func(aws.Context, *cloudwatch.GetMetricWidgetImageInput, ...request.Option) (*cloudwatch.GetMetricWidgetImageOutput, error)
	_GetMetricWidgetImageWithContextFuncCallHistory      []CloudWatchAPIGetMetricWidgetImageWithContextParamSet
	ListDashboardsFunc                                   func(*cloudwatch.ListDashboardsInput) (*cloudwatch.ListDashboardsOutput, error)
	_ListDashboardsFuncCallHistory                       []CloudWatchAPIListDashboardsParamSet
	ListDashboardsRequestFunc                            func(*cloudwatch.ListDashboardsInput) (*request.Request, *cloudwatch.ListDashboardsOutput)
	_ListDashboardsRequestFuncCallHistory                []CloudWatchAPIListDashboardsRequestParamSet
	ListDashboardsWithContextFunc                        func(aws.Context, *cloudwatch.ListDashboardsInput, ...request.Option) (*cloudwatch.ListDashboardsOutput, error)
	_ListDashboardsWithContextFuncCallHistory            []CloudWatchAPIListDashboardsWithContextParamSet
	ListMetricsFunc                                      func(*cloudwatch.ListMetricsInput) (*cloudwatch.ListMetricsOutput, error)
	_ListMetricsFuncCallHistory                          []CloudWatchAPIListMetricsParamSet
	ListMetricsPagesFunc                                 func(*cloudwatch.ListMetricsInput, func(*cloudwatch.ListMetricsOutput, bool) bool) error
	_ListMetricsPagesFuncCallHistory                     []CloudWatchAPIListMetricsPagesParamSet
	ListMetricsPagesWithContextFunc                      func(aws.Context, *cloudwatch.ListMetricsInput, func(*cloudwatch.ListMetricsOutput, bool) bool, ...request.Option) error
	_ListMetricsPagesWithContextFuncCallHistory          []CloudWatchAPIListMetricsPagesWithContextParamSet
	ListMetricsRequestFunc                               func(*cloudwatch.ListMetricsInput) (*request.Request, *cloudwatch.ListMetricsOutput)
	_ListMetricsRequestFuncCallHistory                   []CloudWatchAPIListMetricsRequestParamSet
	ListMetricsWithContextFunc                           func(aws.Context, *cloudwatch.ListMetricsInput, ...request.Option) (*cloudwatch.ListMetricsOutput, error)
	_ListMetricsWithContextFuncCallHistory               []CloudWatchAPIListMetricsWithContextParamSet
	PutDashboardFunc                                     func(*cloudwatch.PutDashboardInput) (*cloudwatch.PutDashboardOutput, error)
	_PutDashboardFuncCallHistory                         []CloudWatchAPIPutDashboardParamSet
	PutDashboardRequestFunc                              func(*cloudwatch.PutDashboardInput) (*request.Request, *cloudwatch.PutDashboardOutput)
	_PutDashboardRequestFuncCallHistory                  []CloudWatchAPIPutDashboardRequestParamSet
	PutDashboardWithContextFunc                          func(aws.Context, *cloudwatch.PutDashboardInput, ...request.Option) (*cloudwatch.PutDashboardOutput, error)
	_PutDashboardWithContextFuncCallHistory              []CloudWatchAPIPutDashboardWithContextParamSet
	PutMetricAlarmFunc                                   func(*cloudwatch.PutMetricAlarmInput) (*cloudwatch.PutMetricAlarmOutput, error)
	_PutMetricAlarmFuncCallHistory                       []CloudWatchAPIPutMetricAlarmParamSet
	PutMetricAlarmRequestFunc                            func(*cloudwatch.PutMetricAlarmInput) (*request.Request, *cloudwatch.PutMetricAlarmOutput)
	_PutMetricAlarmRequestFuncCallHistory                []CloudWatchAPIPutMetricAlarmRequestParamSet
	PutMetricAlarmWithContextFunc                        func(aws.Context, *cloudwatch.PutMetricAlarmInput, ...request.Option) (*cloudwatch.PutMetricAlarmOutput, error)
	_PutMetricAlarmWithContextFuncCallHistory            []CloudWatchAPIPutMetricAlarmWithContextParamSet
	PutMetricDataFunc                                    func(*cloudwatch.PutMetricDataInput) (*cloudwatch.PutMetricDataOutput, error)
	_PutMetricDataFuncCallHistory                        []CloudWatchAPIPutMetricDataParamSet
	PutMetricDataRequestFunc                             func(*cloudwatch.PutMetricDataInput) (*request.Request, *cloudwatch.PutMetricDataOutput)
	_PutMetricDataRequestFuncCallHistory                 []CloudWatchAPIPutMetricDataRequestParamSet
	PutMetricDataWithContextFunc                         func(aws.Context, *cloudwatch.PutMetricDataInput, ...request.Option) (*cloudwatch.PutMetricDataOutput, error)
	_PutMetricDataWithContextFuncCallHistory             []CloudWatchAPIPutMetricDataWithContextParamSet
	SetAlarmStateFunc                                    func(*cloudwatch.SetAlarmStateInput) (*cloudwatch.SetAlarmStateOutput, error)
	_SetAlarmStateFuncCallHistory                        []CloudWatchAPISetAlarmStateParamSet
	SetAlarmStateRequestFunc                             func(*cloudwatch.SetAlarmStateInput) (*request.Request, *cloudwatch.SetAlarmStateOutput)
	_SetAlarmStateRequestFuncCallHistory                 []CloudWatchAPISetAlarmStateRequestParamSet
	SetAlarmStateWithContextFunc                         func(aws.Context, *cloudwatch.SetAlarmStateInput, ...request.Option) (*cloudwatch.SetAlarmStateOutput, error)
	_SetAlarmStateWithContextFuncCallHistory             []CloudWatchAPISetAlarmStateWithContextParamSet
	WaitUntilAlarmExistsFunc                             func(*cloudwatch.DescribeAlarmsInput) error
	_WaitUntilAlarmExistsFuncCallHistory                 []CloudWatchAPIWaitUntilAlarmExistsParamSet
	WaitUntilAlarmExistsWithContextFunc                  func(aws.Context, *cloudwatch.DescribeAlarmsInput, ...request.WaiterOption) error
	_WaitUntilAlarmExistsWithContextFuncCallHistory      []CloudWatchAPIWaitUntilAlarmExistsWithContextParamSet
	mutex                                                sync.RWMutex
}

func NewMockCloudWatchAPI() *MockCloudWatchAPI {
	return &MockCloudWatchAPI{DeleteAlarmsFunc: func(*cloudwatch.DeleteAlarmsInput) (*cloudwatch.DeleteAlarmsOutput, error) {
		return nil, nil
	}, DeleteAlarmsRequestFunc: func(*cloudwatch.DeleteAlarmsInput) (*request.Request, *cloudwatch.DeleteAlarmsOutput) {
		return nil, nil
	}, DeleteAlarmsWithContextFunc: func(aws.Context, *cloudwatch.DeleteAlarmsInput, ...request.Option) (*cloudwatch.DeleteAlarmsOutput, error) {
		return nil, nil
	}, DeleteDashboardsFunc: func(*cloudwatch.DeleteDashboardsInput) (*cloudwatch.DeleteDashboardsOutput, error) {
		return nil, nil
	}, DeleteDashboardsRequestFunc: func(*cloudwatch.DeleteDashboardsInput) (*request.Request, *cloudwatch.DeleteDashboardsOutput) {
		return nil, nil
	}, DeleteDashboardsWithContextFunc: func(aws.Context, *cloudwatch.DeleteDashboardsInput, ...request.Option) (*cloudwatch.DeleteDashboardsOutput, error) {
		return nil, nil
	}, DescribeAlarmHistoryFunc: func(*cloudwatch.DescribeAlarmHistoryInput) (*cloudwatch.DescribeAlarmHistoryOutput, error) {
		return nil, nil
	}, DescribeAlarmHistoryPagesFunc: func(*cloudwatch.DescribeAlarmHistoryInput, func(*cloudwatch.DescribeAlarmHistoryOutput, bool) bool) error {
		return nil
	}, DescribeAlarmHistoryPagesWithContextFunc: func(aws.Context, *cloudwatch.DescribeAlarmHistoryInput, func(*cloudwatch.DescribeAlarmHistoryOutput, bool) bool, ...request.Option) error {
		return nil
	}, DescribeAlarmHistoryRequestFunc: func(*cloudwatch.DescribeAlarmHistoryInput) (*request.Request, *cloudwatch.DescribeAlarmHistoryOutput) {
		return nil, nil
	}, DescribeAlarmHistoryWithContextFunc: func(aws.Context, *cloudwatch.DescribeAlarmHistoryInput, ...request.Option) (*cloudwatch.DescribeAlarmHistoryOutput, error) {
		return nil, nil
	}, DescribeAlarmsFunc: func(*cloudwatch.DescribeAlarmsInput) (*cloudwatch.DescribeAlarmsOutput, error) {
		return nil, nil
	}, DescribeAlarmsForMetricFunc: func(*cloudwatch.DescribeAlarmsForMetricInput) (*cloudwatch.DescribeAlarmsForMetricOutput, error) {
		return nil, nil
	}, DescribeAlarmsForMetricRequestFunc: func(*cloudwatch.DescribeAlarmsForMetricInput) (*request.Request, *cloudwatch.DescribeAlarmsForMetricOutput) {
		return nil, nil
	}, DescribeAlarmsForMetricWithContextFunc: func(aws.Context, *cloudwatch.DescribeAlarmsForMetricInput, ...request.Option) (*cloudwatch.DescribeAlarmsForMetricOutput, error) {
		return nil, nil
	}, DescribeAlarmsPagesFunc: func(*cloudwatch.DescribeAlarmsInput, func(*cloudwatch.DescribeAlarmsOutput, bool) bool) error {
		return nil
	}, DescribeAlarmsPagesWithContextFunc: func(aws.Context, *cloudwatch.DescribeAlarmsInput, func(*cloudwatch.DescribeAlarmsOutput, bool) bool, ...request.Option) error {
		return nil
	}, DescribeAlarmsRequestFunc: func(*cloudwatch.DescribeAlarmsInput) (*request.Request, *cloudwatch.DescribeAlarmsOutput) {
		return nil, nil
	}, DescribeAlarmsWithContextFunc: func(aws.Context, *cloudwatch.DescribeAlarmsInput, ...request.Option) (*cloudwatch.DescribeAlarmsOutput, error) {
		return nil, nil
	}, DisableAlarmActionsFunc: func(*cloudwatch.DisableAlarmActionsInput) (*cloudwatch.DisableAlarmActionsOutput, error) {
		return nil, nil
	}, DisableAlarmActionsRequestFunc: func(*cloudwatch.DisableAlarmActionsInput) (*request.Request, *cloudwatch.DisableAlarmActionsOutput) {
		return nil, nil
	}, DisableAlarmActionsWithContextFunc: func(aws.Context, *cloudwatch.DisableAlarmActionsInput, ...request.Option) (*cloudwatch.DisableAlarmActionsOutput, error) {
		return nil, nil
	}, EnableAlarmActionsFunc: func(*cloudwatch.EnableAlarmActionsInput) (*cloudwatch.EnableAlarmActionsOutput, error) {
		return nil, nil
	}, EnableAlarmActionsRequestFunc: func(*cloudwatch.EnableAlarmActionsInput) (*request.Request, *cloudwatch.EnableAlarmActionsOutput) {
		return nil, nil
	}, EnableAlarmActionsWithContextFunc: func(aws.Context, *cloudwatch.EnableAlarmActionsInput, ...request.Option) (*cloudwatch.EnableAlarmActionsOutput, error) {
		return nil, nil
	}, GetDashboardFunc: func(*cloudwatch.GetDashboardInput) (*cloudwatch.GetDashboardOutput, error) {
		return nil, nil
	}, GetDashboardRequestFunc: func(*cloudwatch.GetDashboardInput) (*request.Request, *cloudwatch.GetDashboardOutput) {
		return nil, nil
	}, GetDashboardWithContextFunc: func(aws.Context, *cloudwatch.GetDashboardInput, ...request.Option) (*cloudwatch.GetDashboardOutput, error) {
		return nil, nil
	}, GetMetricDataFunc: func(*cloudwatch.GetMetricDataInput) (*cloudwatch.GetMetricDataOutput, error) {
		return nil, nil
	}, GetMetricDataRequestFunc: func(*cloudwatch.GetMetricDataInput) (*request.Request, *cloudwatch.GetMetricDataOutput) {
		return nil, nil
	}, GetMetricDataWithContextFunc: func(aws.Context, *cloudwatch.GetMetricDataInput, ...request.Option) (*cloudwatch.GetMetricDataOutput, error) {
		return nil, nil
	}, GetMetricStatisticsFunc: func(*cloudwatch.GetMetricStatisticsInput) (*cloudwatch.GetMetricStatisticsOutput, error) {
		return nil, nil
	}, GetMetricStatisticsRequestFunc: func(*cloudwatch.GetMetricStatisticsInput) (*request.Request, *cloudwatch.GetMetricStatisticsOutput) {
		return nil, nil
	}, GetMetricStatisticsWithContextFunc: func(aws.Context, *cloudwatch.GetMetricStatisticsInput, ...request.Option) (*cloudwatch.GetMetricStatisticsOutput, error) {
		return nil, nil
	}, GetMetricWidgetImageFunc: func(*cloudwatch.GetMetricWidgetImageInput) (*cloudwatch.GetMetricWidgetImageOutput, error) {
		return nil, nil
	}, GetMetricWidgetImageRequestFunc: func(*cloudwatch.GetMetricWidgetImageInput) (*request.Request, *cloudwatch.GetMetricWidgetImageOutput) {
		return nil, nil
	}, GetMetricWidgetImageWithContextFunc: func(aws.Context, *cloudwatch.GetMetricWidgetImageInput, ...request.Option) (*cloudwatch.GetMetricWidgetImageOutput, error) {
		return nil, nil
	}, ListDashboardsFunc: func(*cloudwatch.ListDashboardsInput) (*cloudwatch.ListDashboardsOutput, error) {
		return nil, nil
	}, ListDashboardsRequestFunc: func(*cloudwatch.ListDashboardsInput) (*request.Request, *cloudwatch.ListDashboardsOutput) {
		return nil, nil
	}, ListDashboardsWithContextFunc: func(aws.Context, *cloudwatch.ListDashboardsInput, ...request.Option) (*cloudwatch.ListDashboardsOutput, error) {
		return nil, nil
	}, ListMetricsFunc: func(*cloudwatch.ListMetricsInput) (*cloudwatch.ListMetricsOutput, error) {
		return nil, nil
	}, ListMetricsPagesFunc: func(*cloudwatch.ListMetricsInput, func(*cloudwatch.ListMetricsOutput, bool) bool) error {
		return nil
	}, ListMetricsPagesWithContextFunc: func(aws.Context, *cloudwatch.ListMetricsInput, func(*cloudwatch.ListMetricsOutput, bool) bool, ...request.Option) error {
		return nil
	}, ListMetricsRequestFunc: func(*cloudwatch.ListMetricsInput) (*request.Request, *cloudwatch.ListMetricsOutput) {
		return nil, nil
	}, ListMetricsWithContextFunc: func(aws.Context, *cloudwatch.ListMetricsInput, ...request.Option) (*cloudwatch.ListMetricsOutput, error) {
		return nil, nil
	}, PutDashboardFunc: func(*cloudwatch.PutDashboardInput) (*cloudwatch.PutDashboardOutput, error) {
		return nil, nil
	}, PutDashboardRequestFunc: func(*cloudwatch.PutDashboardInput) (*request.Request, *cloudwatch.PutDashboardOutput) {
		return nil, nil
	}, PutDashboardWithContextFunc: func(aws.Context, *cloudwatch.PutDashboardInput, ...request.Option) (*cloudwatch.PutDashboardOutput, error) {
		return nil, nil
	}, PutMetricAlarmFunc: func(*cloudwatch.PutMetricAlarmInput) (*cloudwatch.PutMetricAlarmOutput, error) {
		return nil, nil
	}, PutMetricAlarmRequestFunc: func(*cloudwatch.PutMetricAlarmInput) (*request.Request, *cloudwatch.PutMetricAlarmOutput) {
		return nil, nil
	}, PutMetricAlarmWithContextFunc: func(aws.Context, *cloudwatch.PutMetricAlarmInput, ...request.Option) (*cloudwatch.PutMetricAlarmOutput, error) {
		return nil, nil
	}, PutMetricDataFunc: func(*cloudwatch.PutMetricDataInput) (*cloudwatch.PutMetricDataOutput, error) {
		return nil, nil
	}, PutMetricDataRequestFunc: func(*cloudwatch.PutMetricDataInput) (*request.Request, *cloudwatch.PutMetricDataOutput) {
		return nil, nil
	}, PutMetricDataWithContextFunc: func(aws.Context, *cloudwatch.PutMetricDataInput, ...request.Option) (*cloudwatch.PutMetricDataOutput, error) {
		return nil, nil
	}, SetAlarmStateFunc: func(*cloudwatch.SetAlarmStateInput) (*cloudwatch.SetAlarmStateOutput, error) {
		return nil, nil
	}, SetAlarmStateRequestFunc: func(*cloudwatch.SetAlarmStateInput) (*request.Request, *cloudwatch.SetAlarmStateOutput) {
		return nil, nil
	}, SetAlarmStateWithContextFunc: func(aws.Context, *cloudwatch.SetAlarmStateInput, ...request.Option) (*cloudwatch.SetAlarmStateOutput, error) {
		return nil, nil
	}, WaitUntilAlarmExistsFunc: func(*cloudwatch.DescribeAlarmsInput) error {
		return nil
	}, WaitUntilAlarmExistsWithContextFunc: func(aws.Context, *cloudwatch.DescribeAlarmsInput, ...request.WaiterOption) error {
		return nil
	}}
}

type CloudWatchAPIDeleteAlarmsParamSet struct {
	Arg0 *cloudwatch.DeleteAlarmsInput
}

func (m *MockCloudWatchAPI) DeleteAlarms(v0 *cloudwatch.DeleteAlarmsInput) (*cloudwatch.DeleteAlarmsOutput, error) {
	m.mutex.RLock()
	m._DeleteAlarmsFuncCallHistory = append(m._DeleteAlarmsFuncCallHistory, CloudWatchAPIDeleteAlarmsParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.DeleteAlarmsFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) DeleteAlarmsFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DeleteAlarmsFuncCallHistory)
}

func (m *MockCloudWatchAPI) DeleteAlarmsFuncCallParams() []CloudWatchAPIDeleteAlarmsParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DeleteAlarmsFuncCallHistory
}

type CloudWatchAPIDeleteAlarmsRequestParamSet struct {
	Arg0 *cloudwatch.DeleteAlarmsInput
}

func (m *MockCloudWatchAPI) DeleteAlarmsRequest(v0 *cloudwatch.DeleteAlarmsInput) (*request.Request, *cloudwatch.DeleteAlarmsOutput) {
	m.mutex.RLock()
	m._DeleteAlarmsRequestFuncCallHistory = append(m._DeleteAlarmsRequestFuncCallHistory, CloudWatchAPIDeleteAlarmsRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.DeleteAlarmsRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) DeleteAlarmsRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DeleteAlarmsRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) DeleteAlarmsRequestFuncCallParams() []CloudWatchAPIDeleteAlarmsRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DeleteAlarmsRequestFuncCallHistory
}

type CloudWatchAPIDeleteAlarmsWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.DeleteAlarmsInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) DeleteAlarmsWithContext(v0 aws.Context, v1 *cloudwatch.DeleteAlarmsInput, v2 ...request.Option) (*cloudwatch.DeleteAlarmsOutput, error) {
	m.mutex.RLock()
	m._DeleteAlarmsWithContextFuncCallHistory = append(m._DeleteAlarmsWithContextFuncCallHistory, CloudWatchAPIDeleteAlarmsWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.DeleteAlarmsWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) DeleteAlarmsWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DeleteAlarmsWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) DeleteAlarmsWithContextFuncCallParams() []CloudWatchAPIDeleteAlarmsWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DeleteAlarmsWithContextFuncCallHistory
}

type CloudWatchAPIDeleteDashboardsParamSet struct {
	Arg0 *cloudwatch.DeleteDashboardsInput
}

func (m *MockCloudWatchAPI) DeleteDashboards(v0 *cloudwatch.DeleteDashboardsInput) (*cloudwatch.DeleteDashboardsOutput, error) {
	m.mutex.RLock()
	m._DeleteDashboardsFuncCallHistory = append(m._DeleteDashboardsFuncCallHistory, CloudWatchAPIDeleteDashboardsParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.DeleteDashboardsFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) DeleteDashboardsFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DeleteDashboardsFuncCallHistory)
}

func (m *MockCloudWatchAPI) DeleteDashboardsFuncCallParams() []CloudWatchAPIDeleteDashboardsParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DeleteDashboardsFuncCallHistory
}

type CloudWatchAPIDeleteDashboardsRequestParamSet struct {
	Arg0 *cloudwatch.DeleteDashboardsInput
}

func (m *MockCloudWatchAPI) DeleteDashboardsRequest(v0 *cloudwatch.DeleteDashboardsInput) (*request.Request, *cloudwatch.DeleteDashboardsOutput) {
	m.mutex.RLock()
	m._DeleteDashboardsRequestFuncCallHistory = append(m._DeleteDashboardsRequestFuncCallHistory, CloudWatchAPIDeleteDashboardsRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.DeleteDashboardsRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) DeleteDashboardsRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DeleteDashboardsRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) DeleteDashboardsRequestFuncCallParams() []CloudWatchAPIDeleteDashboardsRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DeleteDashboardsRequestFuncCallHistory
}

type CloudWatchAPIDeleteDashboardsWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.DeleteDashboardsInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) DeleteDashboardsWithContext(v0 aws.Context, v1 *cloudwatch.DeleteDashboardsInput, v2 ...request.Option) (*cloudwatch.DeleteDashboardsOutput, error) {
	m.mutex.RLock()
	m._DeleteDashboardsWithContextFuncCallHistory = append(m._DeleteDashboardsWithContextFuncCallHistory, CloudWatchAPIDeleteDashboardsWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.DeleteDashboardsWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) DeleteDashboardsWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DeleteDashboardsWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) DeleteDashboardsWithContextFuncCallParams() []CloudWatchAPIDeleteDashboardsWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DeleteDashboardsWithContextFuncCallHistory
}

type CloudWatchAPIDescribeAlarmHistoryParamSet struct {
	Arg0 *cloudwatch.DescribeAlarmHistoryInput
}

func (m *MockCloudWatchAPI) DescribeAlarmHistory(v0 *cloudwatch.DescribeAlarmHistoryInput) (*cloudwatch.DescribeAlarmHistoryOutput, error) {
	m.mutex.RLock()
	m._DescribeAlarmHistoryFuncCallHistory = append(m._DescribeAlarmHistoryFuncCallHistory, CloudWatchAPIDescribeAlarmHistoryParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.DescribeAlarmHistoryFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) DescribeAlarmHistoryFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DescribeAlarmHistoryFuncCallHistory)
}

func (m *MockCloudWatchAPI) DescribeAlarmHistoryFuncCallParams() []CloudWatchAPIDescribeAlarmHistoryParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DescribeAlarmHistoryFuncCallHistory
}

type CloudWatchAPIDescribeAlarmHistoryPagesParamSet struct {
	Arg0 *cloudwatch.DescribeAlarmHistoryInput
	Arg1 func(*cloudwatch.DescribeAlarmHistoryOutput, bool) bool
}

func (m *MockCloudWatchAPI) DescribeAlarmHistoryPages(v0 *cloudwatch.DescribeAlarmHistoryInput, v1 func(*cloudwatch.DescribeAlarmHistoryOutput, bool) bool) error {
	m.mutex.RLock()
	m._DescribeAlarmHistoryPagesFuncCallHistory = append(m._DescribeAlarmHistoryPagesFuncCallHistory, CloudWatchAPIDescribeAlarmHistoryPagesParamSet{v0, v1})
	m.mutex.RUnlock()
	r0 := m.DescribeAlarmHistoryPagesFunc(v0, v1)
	return r0
}

func (m *MockCloudWatchAPI) DescribeAlarmHistoryPagesFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DescribeAlarmHistoryPagesFuncCallHistory)
}

func (m *MockCloudWatchAPI) DescribeAlarmHistoryPagesFuncCallParams() []CloudWatchAPIDescribeAlarmHistoryPagesParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DescribeAlarmHistoryPagesFuncCallHistory
}

type CloudWatchAPIDescribeAlarmHistoryPagesWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.DescribeAlarmHistoryInput
	Arg2 func(*cloudwatch.DescribeAlarmHistoryOutput, bool) bool
	Arg3 []request.Option
}

func (m *MockCloudWatchAPI) DescribeAlarmHistoryPagesWithContext(v0 aws.Context, v1 *cloudwatch.DescribeAlarmHistoryInput, v2 func(*cloudwatch.DescribeAlarmHistoryOutput, bool) bool, v3 ...request.Option) error {
	m.mutex.RLock()
	m._DescribeAlarmHistoryPagesWithContextFuncCallHistory = append(m._DescribeAlarmHistoryPagesWithContextFuncCallHistory, CloudWatchAPIDescribeAlarmHistoryPagesWithContextParamSet{v0, v1, v2, v3})
	m.mutex.RUnlock()
	r0 := m.DescribeAlarmHistoryPagesWithContextFunc(v0, v1, v2, v3...)
	return r0
}

func (m *MockCloudWatchAPI) DescribeAlarmHistoryPagesWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DescribeAlarmHistoryPagesWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) DescribeAlarmHistoryPagesWithContextFuncCallParams() []CloudWatchAPIDescribeAlarmHistoryPagesWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DescribeAlarmHistoryPagesWithContextFuncCallHistory
}

type CloudWatchAPIDescribeAlarmHistoryRequestParamSet struct {
	Arg0 *cloudwatch.DescribeAlarmHistoryInput
}

func (m *MockCloudWatchAPI) DescribeAlarmHistoryRequest(v0 *cloudwatch.DescribeAlarmHistoryInput) (*request.Request, *cloudwatch.DescribeAlarmHistoryOutput) {
	m.mutex.RLock()
	m._DescribeAlarmHistoryRequestFuncCallHistory = append(m._DescribeAlarmHistoryRequestFuncCallHistory, CloudWatchAPIDescribeAlarmHistoryRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.DescribeAlarmHistoryRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) DescribeAlarmHistoryRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DescribeAlarmHistoryRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) DescribeAlarmHistoryRequestFuncCallParams() []CloudWatchAPIDescribeAlarmHistoryRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DescribeAlarmHistoryRequestFuncCallHistory
}

type CloudWatchAPIDescribeAlarmHistoryWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.DescribeAlarmHistoryInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) DescribeAlarmHistoryWithContext(v0 aws.Context, v1 *cloudwatch.DescribeAlarmHistoryInput, v2 ...request.Option) (*cloudwatch.DescribeAlarmHistoryOutput, error) {
	m.mutex.RLock()
	m._DescribeAlarmHistoryWithContextFuncCallHistory = append(m._DescribeAlarmHistoryWithContextFuncCallHistory, CloudWatchAPIDescribeAlarmHistoryWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.DescribeAlarmHistoryWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) DescribeAlarmHistoryWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DescribeAlarmHistoryWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) DescribeAlarmHistoryWithContextFuncCallParams() []CloudWatchAPIDescribeAlarmHistoryWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DescribeAlarmHistoryWithContextFuncCallHistory
}

type CloudWatchAPIDescribeAlarmsParamSet struct {
	Arg0 *cloudwatch.DescribeAlarmsInput
}

func (m *MockCloudWatchAPI) DescribeAlarms(v0 *cloudwatch.DescribeAlarmsInput) (*cloudwatch.DescribeAlarmsOutput, error) {
	m.mutex.RLock()
	m._DescribeAlarmsFuncCallHistory = append(m._DescribeAlarmsFuncCallHistory, CloudWatchAPIDescribeAlarmsParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.DescribeAlarmsFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) DescribeAlarmsFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DescribeAlarmsFuncCallHistory)
}

func (m *MockCloudWatchAPI) DescribeAlarmsFuncCallParams() []CloudWatchAPIDescribeAlarmsParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DescribeAlarmsFuncCallHistory
}

type CloudWatchAPIDescribeAlarmsForMetricParamSet struct {
	Arg0 *cloudwatch.DescribeAlarmsForMetricInput
}

func (m *MockCloudWatchAPI) DescribeAlarmsForMetric(v0 *cloudwatch.DescribeAlarmsForMetricInput) (*cloudwatch.DescribeAlarmsForMetricOutput, error) {
	m.mutex.RLock()
	m._DescribeAlarmsForMetricFuncCallHistory = append(m._DescribeAlarmsForMetricFuncCallHistory, CloudWatchAPIDescribeAlarmsForMetricParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.DescribeAlarmsForMetricFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) DescribeAlarmsForMetricFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DescribeAlarmsForMetricFuncCallHistory)
}

func (m *MockCloudWatchAPI) DescribeAlarmsForMetricFuncCallParams() []CloudWatchAPIDescribeAlarmsForMetricParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DescribeAlarmsForMetricFuncCallHistory
}

type CloudWatchAPIDescribeAlarmsForMetricRequestParamSet struct {
	Arg0 *cloudwatch.DescribeAlarmsForMetricInput
}

func (m *MockCloudWatchAPI) DescribeAlarmsForMetricRequest(v0 *cloudwatch.DescribeAlarmsForMetricInput) (*request.Request, *cloudwatch.DescribeAlarmsForMetricOutput) {
	m.mutex.RLock()
	m._DescribeAlarmsForMetricRequestFuncCallHistory = append(m._DescribeAlarmsForMetricRequestFuncCallHistory, CloudWatchAPIDescribeAlarmsForMetricRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.DescribeAlarmsForMetricRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) DescribeAlarmsForMetricRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DescribeAlarmsForMetricRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) DescribeAlarmsForMetricRequestFuncCallParams() []CloudWatchAPIDescribeAlarmsForMetricRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DescribeAlarmsForMetricRequestFuncCallHistory
}

type CloudWatchAPIDescribeAlarmsForMetricWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.DescribeAlarmsForMetricInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) DescribeAlarmsForMetricWithContext(v0 aws.Context, v1 *cloudwatch.DescribeAlarmsForMetricInput, v2 ...request.Option) (*cloudwatch.DescribeAlarmsForMetricOutput, error) {
	m.mutex.RLock()
	m._DescribeAlarmsForMetricWithContextFuncCallHistory = append(m._DescribeAlarmsForMetricWithContextFuncCallHistory, CloudWatchAPIDescribeAlarmsForMetricWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.DescribeAlarmsForMetricWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) DescribeAlarmsForMetricWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DescribeAlarmsForMetricWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) DescribeAlarmsForMetricWithContextFuncCallParams() []CloudWatchAPIDescribeAlarmsForMetricWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DescribeAlarmsForMetricWithContextFuncCallHistory
}

type CloudWatchAPIDescribeAlarmsPagesParamSet struct {
	Arg0 *cloudwatch.DescribeAlarmsInput
	Arg1 func(*cloudwatch.DescribeAlarmsOutput, bool) bool
}

func (m *MockCloudWatchAPI) DescribeAlarmsPages(v0 *cloudwatch.DescribeAlarmsInput, v1 func(*cloudwatch.DescribeAlarmsOutput, bool) bool) error {
	m.mutex.RLock()
	m._DescribeAlarmsPagesFuncCallHistory = append(m._DescribeAlarmsPagesFuncCallHistory, CloudWatchAPIDescribeAlarmsPagesParamSet{v0, v1})
	m.mutex.RUnlock()
	r0 := m.DescribeAlarmsPagesFunc(v0, v1)
	return r0
}

func (m *MockCloudWatchAPI) DescribeAlarmsPagesFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DescribeAlarmsPagesFuncCallHistory)
}

func (m *MockCloudWatchAPI) DescribeAlarmsPagesFuncCallParams() []CloudWatchAPIDescribeAlarmsPagesParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DescribeAlarmsPagesFuncCallHistory
}

type CloudWatchAPIDescribeAlarmsPagesWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.DescribeAlarmsInput
	Arg2 func(*cloudwatch.DescribeAlarmsOutput, bool) bool
	Arg3 []request.Option
}

func (m *MockCloudWatchAPI) DescribeAlarmsPagesWithContext(v0 aws.Context, v1 *cloudwatch.DescribeAlarmsInput, v2 func(*cloudwatch.DescribeAlarmsOutput, bool) bool, v3 ...request.Option) error {
	m.mutex.RLock()
	m._DescribeAlarmsPagesWithContextFuncCallHistory = append(m._DescribeAlarmsPagesWithContextFuncCallHistory, CloudWatchAPIDescribeAlarmsPagesWithContextParamSet{v0, v1, v2, v3})
	m.mutex.RUnlock()
	r0 := m.DescribeAlarmsPagesWithContextFunc(v0, v1, v2, v3...)
	return r0
}

func (m *MockCloudWatchAPI) DescribeAlarmsPagesWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DescribeAlarmsPagesWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) DescribeAlarmsPagesWithContextFuncCallParams() []CloudWatchAPIDescribeAlarmsPagesWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DescribeAlarmsPagesWithContextFuncCallHistory
}

type CloudWatchAPIDescribeAlarmsRequestParamSet struct {
	Arg0 *cloudwatch.DescribeAlarmsInput
}

func (m *MockCloudWatchAPI) DescribeAlarmsRequest(v0 *cloudwatch.DescribeAlarmsInput) (*request.Request, *cloudwatch.DescribeAlarmsOutput) {
	m.mutex.RLock()
	m._DescribeAlarmsRequestFuncCallHistory = append(m._DescribeAlarmsRequestFuncCallHistory, CloudWatchAPIDescribeAlarmsRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.DescribeAlarmsRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) DescribeAlarmsRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DescribeAlarmsRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) DescribeAlarmsRequestFuncCallParams() []CloudWatchAPIDescribeAlarmsRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DescribeAlarmsRequestFuncCallHistory
}

type CloudWatchAPIDescribeAlarmsWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.DescribeAlarmsInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) DescribeAlarmsWithContext(v0 aws.Context, v1 *cloudwatch.DescribeAlarmsInput, v2 ...request.Option) (*cloudwatch.DescribeAlarmsOutput, error) {
	m.mutex.RLock()
	m._DescribeAlarmsWithContextFuncCallHistory = append(m._DescribeAlarmsWithContextFuncCallHistory, CloudWatchAPIDescribeAlarmsWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.DescribeAlarmsWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) DescribeAlarmsWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DescribeAlarmsWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) DescribeAlarmsWithContextFuncCallParams() []CloudWatchAPIDescribeAlarmsWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DescribeAlarmsWithContextFuncCallHistory
}

type CloudWatchAPIDisableAlarmActionsParamSet struct {
	Arg0 *cloudwatch.DisableAlarmActionsInput
}

func (m *MockCloudWatchAPI) DisableAlarmActions(v0 *cloudwatch.DisableAlarmActionsInput) (*cloudwatch.DisableAlarmActionsOutput, error) {
	m.mutex.RLock()
	m._DisableAlarmActionsFuncCallHistory = append(m._DisableAlarmActionsFuncCallHistory, CloudWatchAPIDisableAlarmActionsParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.DisableAlarmActionsFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) DisableAlarmActionsFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DisableAlarmActionsFuncCallHistory)
}

func (m *MockCloudWatchAPI) DisableAlarmActionsFuncCallParams() []CloudWatchAPIDisableAlarmActionsParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DisableAlarmActionsFuncCallHistory
}

type CloudWatchAPIDisableAlarmActionsRequestParamSet struct {
	Arg0 *cloudwatch.DisableAlarmActionsInput
}

func (m *MockCloudWatchAPI) DisableAlarmActionsRequest(v0 *cloudwatch.DisableAlarmActionsInput) (*request.Request, *cloudwatch.DisableAlarmActionsOutput) {
	m.mutex.RLock()
	m._DisableAlarmActionsRequestFuncCallHistory = append(m._DisableAlarmActionsRequestFuncCallHistory, CloudWatchAPIDisableAlarmActionsRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.DisableAlarmActionsRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) DisableAlarmActionsRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DisableAlarmActionsRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) DisableAlarmActionsRequestFuncCallParams() []CloudWatchAPIDisableAlarmActionsRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DisableAlarmActionsRequestFuncCallHistory
}

type CloudWatchAPIDisableAlarmActionsWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.DisableAlarmActionsInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) DisableAlarmActionsWithContext(v0 aws.Context, v1 *cloudwatch.DisableAlarmActionsInput, v2 ...request.Option) (*cloudwatch.DisableAlarmActionsOutput, error) {
	m.mutex.RLock()
	m._DisableAlarmActionsWithContextFuncCallHistory = append(m._DisableAlarmActionsWithContextFuncCallHistory, CloudWatchAPIDisableAlarmActionsWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.DisableAlarmActionsWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) DisableAlarmActionsWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._DisableAlarmActionsWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) DisableAlarmActionsWithContextFuncCallParams() []CloudWatchAPIDisableAlarmActionsWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._DisableAlarmActionsWithContextFuncCallHistory
}

type CloudWatchAPIEnableAlarmActionsParamSet struct {
	Arg0 *cloudwatch.EnableAlarmActionsInput
}

func (m *MockCloudWatchAPI) EnableAlarmActions(v0 *cloudwatch.EnableAlarmActionsInput) (*cloudwatch.EnableAlarmActionsOutput, error) {
	m.mutex.RLock()
	m._EnableAlarmActionsFuncCallHistory = append(m._EnableAlarmActionsFuncCallHistory, CloudWatchAPIEnableAlarmActionsParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.EnableAlarmActionsFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) EnableAlarmActionsFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._EnableAlarmActionsFuncCallHistory)
}

func (m *MockCloudWatchAPI) EnableAlarmActionsFuncCallParams() []CloudWatchAPIEnableAlarmActionsParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._EnableAlarmActionsFuncCallHistory
}

type CloudWatchAPIEnableAlarmActionsRequestParamSet struct {
	Arg0 *cloudwatch.EnableAlarmActionsInput
}

func (m *MockCloudWatchAPI) EnableAlarmActionsRequest(v0 *cloudwatch.EnableAlarmActionsInput) (*request.Request, *cloudwatch.EnableAlarmActionsOutput) {
	m.mutex.RLock()
	m._EnableAlarmActionsRequestFuncCallHistory = append(m._EnableAlarmActionsRequestFuncCallHistory, CloudWatchAPIEnableAlarmActionsRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.EnableAlarmActionsRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) EnableAlarmActionsRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._EnableAlarmActionsRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) EnableAlarmActionsRequestFuncCallParams() []CloudWatchAPIEnableAlarmActionsRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._EnableAlarmActionsRequestFuncCallHistory
}

type CloudWatchAPIEnableAlarmActionsWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.EnableAlarmActionsInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) EnableAlarmActionsWithContext(v0 aws.Context, v1 *cloudwatch.EnableAlarmActionsInput, v2 ...request.Option) (*cloudwatch.EnableAlarmActionsOutput, error) {
	m.mutex.RLock()
	m._EnableAlarmActionsWithContextFuncCallHistory = append(m._EnableAlarmActionsWithContextFuncCallHistory, CloudWatchAPIEnableAlarmActionsWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.EnableAlarmActionsWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) EnableAlarmActionsWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._EnableAlarmActionsWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) EnableAlarmActionsWithContextFuncCallParams() []CloudWatchAPIEnableAlarmActionsWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._EnableAlarmActionsWithContextFuncCallHistory
}

type CloudWatchAPIGetDashboardParamSet struct {
	Arg0 *cloudwatch.GetDashboardInput
}

func (m *MockCloudWatchAPI) GetDashboard(v0 *cloudwatch.GetDashboardInput) (*cloudwatch.GetDashboardOutput, error) {
	m.mutex.RLock()
	m._GetDashboardFuncCallHistory = append(m._GetDashboardFuncCallHistory, CloudWatchAPIGetDashboardParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.GetDashboardFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) GetDashboardFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._GetDashboardFuncCallHistory)
}

func (m *MockCloudWatchAPI) GetDashboardFuncCallParams() []CloudWatchAPIGetDashboardParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._GetDashboardFuncCallHistory
}

type CloudWatchAPIGetDashboardRequestParamSet struct {
	Arg0 *cloudwatch.GetDashboardInput
}

func (m *MockCloudWatchAPI) GetDashboardRequest(v0 *cloudwatch.GetDashboardInput) (*request.Request, *cloudwatch.GetDashboardOutput) {
	m.mutex.RLock()
	m._GetDashboardRequestFuncCallHistory = append(m._GetDashboardRequestFuncCallHistory, CloudWatchAPIGetDashboardRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.GetDashboardRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) GetDashboardRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._GetDashboardRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) GetDashboardRequestFuncCallParams() []CloudWatchAPIGetDashboardRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._GetDashboardRequestFuncCallHistory
}

type CloudWatchAPIGetDashboardWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.GetDashboardInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) GetDashboardWithContext(v0 aws.Context, v1 *cloudwatch.GetDashboardInput, v2 ...request.Option) (*cloudwatch.GetDashboardOutput, error) {
	m.mutex.RLock()
	m._GetDashboardWithContextFuncCallHistory = append(m._GetDashboardWithContextFuncCallHistory, CloudWatchAPIGetDashboardWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.GetDashboardWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) GetDashboardWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._GetDashboardWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) GetDashboardWithContextFuncCallParams() []CloudWatchAPIGetDashboardWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._GetDashboardWithContextFuncCallHistory
}

type CloudWatchAPIGetMetricDataParamSet struct {
	Arg0 *cloudwatch.GetMetricDataInput
}

func (m *MockCloudWatchAPI) GetMetricData(v0 *cloudwatch.GetMetricDataInput) (*cloudwatch.GetMetricDataOutput, error) {
	m.mutex.RLock()
	m._GetMetricDataFuncCallHistory = append(m._GetMetricDataFuncCallHistory, CloudWatchAPIGetMetricDataParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.GetMetricDataFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) GetMetricDataFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._GetMetricDataFuncCallHistory)
}

func (m *MockCloudWatchAPI) GetMetricDataFuncCallParams() []CloudWatchAPIGetMetricDataParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._GetMetricDataFuncCallHistory
}

type CloudWatchAPIGetMetricDataRequestParamSet struct {
	Arg0 *cloudwatch.GetMetricDataInput
}

func (m *MockCloudWatchAPI) GetMetricDataRequest(v0 *cloudwatch.GetMetricDataInput) (*request.Request, *cloudwatch.GetMetricDataOutput) {
	m.mutex.RLock()
	m._GetMetricDataRequestFuncCallHistory = append(m._GetMetricDataRequestFuncCallHistory, CloudWatchAPIGetMetricDataRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.GetMetricDataRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) GetMetricDataRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._GetMetricDataRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) GetMetricDataRequestFuncCallParams() []CloudWatchAPIGetMetricDataRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._GetMetricDataRequestFuncCallHistory
}

type CloudWatchAPIGetMetricDataWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.GetMetricDataInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) GetMetricDataWithContext(v0 aws.Context, v1 *cloudwatch.GetMetricDataInput, v2 ...request.Option) (*cloudwatch.GetMetricDataOutput, error) {
	m.mutex.RLock()
	m._GetMetricDataWithContextFuncCallHistory = append(m._GetMetricDataWithContextFuncCallHistory, CloudWatchAPIGetMetricDataWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.GetMetricDataWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) GetMetricDataWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._GetMetricDataWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) GetMetricDataWithContextFuncCallParams() []CloudWatchAPIGetMetricDataWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._GetMetricDataWithContextFuncCallHistory
}

type CloudWatchAPIGetMetricStatisticsParamSet struct {
	Arg0 *cloudwatch.GetMetricStatisticsInput
}

func (m *MockCloudWatchAPI) GetMetricStatistics(v0 *cloudwatch.GetMetricStatisticsInput) (*cloudwatch.GetMetricStatisticsOutput, error) {
	m.mutex.RLock()
	m._GetMetricStatisticsFuncCallHistory = append(m._GetMetricStatisticsFuncCallHistory, CloudWatchAPIGetMetricStatisticsParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.GetMetricStatisticsFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) GetMetricStatisticsFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._GetMetricStatisticsFuncCallHistory)
}

func (m *MockCloudWatchAPI) GetMetricStatisticsFuncCallParams() []CloudWatchAPIGetMetricStatisticsParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._GetMetricStatisticsFuncCallHistory
}

type CloudWatchAPIGetMetricStatisticsRequestParamSet struct {
	Arg0 *cloudwatch.GetMetricStatisticsInput
}

func (m *MockCloudWatchAPI) GetMetricStatisticsRequest(v0 *cloudwatch.GetMetricStatisticsInput) (*request.Request, *cloudwatch.GetMetricStatisticsOutput) {
	m.mutex.RLock()
	m._GetMetricStatisticsRequestFuncCallHistory = append(m._GetMetricStatisticsRequestFuncCallHistory, CloudWatchAPIGetMetricStatisticsRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.GetMetricStatisticsRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) GetMetricStatisticsRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._GetMetricStatisticsRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) GetMetricStatisticsRequestFuncCallParams() []CloudWatchAPIGetMetricStatisticsRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._GetMetricStatisticsRequestFuncCallHistory
}

type CloudWatchAPIGetMetricStatisticsWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.GetMetricStatisticsInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) GetMetricStatisticsWithContext(v0 aws.Context, v1 *cloudwatch.GetMetricStatisticsInput, v2 ...request.Option) (*cloudwatch.GetMetricStatisticsOutput, error) {
	m.mutex.RLock()
	m._GetMetricStatisticsWithContextFuncCallHistory = append(m._GetMetricStatisticsWithContextFuncCallHistory, CloudWatchAPIGetMetricStatisticsWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.GetMetricStatisticsWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) GetMetricStatisticsWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._GetMetricStatisticsWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) GetMetricStatisticsWithContextFuncCallParams() []CloudWatchAPIGetMetricStatisticsWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._GetMetricStatisticsWithContextFuncCallHistory
}

type CloudWatchAPIGetMetricWidgetImageParamSet struct {
	Arg0 *cloudwatch.GetMetricWidgetImageInput
}

func (m *MockCloudWatchAPI) GetMetricWidgetImage(v0 *cloudwatch.GetMetricWidgetImageInput) (*cloudwatch.GetMetricWidgetImageOutput, error) {
	m.mutex.RLock()
	m._GetMetricWidgetImageFuncCallHistory = append(m._GetMetricWidgetImageFuncCallHistory, CloudWatchAPIGetMetricWidgetImageParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.GetMetricWidgetImageFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) GetMetricWidgetImageFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._GetMetricWidgetImageFuncCallHistory)
}

func (m *MockCloudWatchAPI) GetMetricWidgetImageFuncCallParams() []CloudWatchAPIGetMetricWidgetImageParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._GetMetricWidgetImageFuncCallHistory
}

type CloudWatchAPIGetMetricWidgetImageRequestParamSet struct {
	Arg0 *cloudwatch.GetMetricWidgetImageInput
}

func (m *MockCloudWatchAPI) GetMetricWidgetImageRequest(v0 *cloudwatch.GetMetricWidgetImageInput) (*request.Request, *cloudwatch.GetMetricWidgetImageOutput) {
	m.mutex.RLock()
	m._GetMetricWidgetImageRequestFuncCallHistory = append(m._GetMetricWidgetImageRequestFuncCallHistory, CloudWatchAPIGetMetricWidgetImageRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.GetMetricWidgetImageRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) GetMetricWidgetImageRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._GetMetricWidgetImageRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) GetMetricWidgetImageRequestFuncCallParams() []CloudWatchAPIGetMetricWidgetImageRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._GetMetricWidgetImageRequestFuncCallHistory
}

type CloudWatchAPIGetMetricWidgetImageWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.GetMetricWidgetImageInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) GetMetricWidgetImageWithContext(v0 aws.Context, v1 *cloudwatch.GetMetricWidgetImageInput, v2 ...request.Option) (*cloudwatch.GetMetricWidgetImageOutput, error) {
	m.mutex.RLock()
	m._GetMetricWidgetImageWithContextFuncCallHistory = append(m._GetMetricWidgetImageWithContextFuncCallHistory, CloudWatchAPIGetMetricWidgetImageWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.GetMetricWidgetImageWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) GetMetricWidgetImageWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._GetMetricWidgetImageWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) GetMetricWidgetImageWithContextFuncCallParams() []CloudWatchAPIGetMetricWidgetImageWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._GetMetricWidgetImageWithContextFuncCallHistory
}

type CloudWatchAPIListDashboardsParamSet struct {
	Arg0 *cloudwatch.ListDashboardsInput
}

func (m *MockCloudWatchAPI) ListDashboards(v0 *cloudwatch.ListDashboardsInput) (*cloudwatch.ListDashboardsOutput, error) {
	m.mutex.RLock()
	m._ListDashboardsFuncCallHistory = append(m._ListDashboardsFuncCallHistory, CloudWatchAPIListDashboardsParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.ListDashboardsFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) ListDashboardsFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._ListDashboardsFuncCallHistory)
}

func (m *MockCloudWatchAPI) ListDashboardsFuncCallParams() []CloudWatchAPIListDashboardsParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._ListDashboardsFuncCallHistory
}

type CloudWatchAPIListDashboardsRequestParamSet struct {
	Arg0 *cloudwatch.ListDashboardsInput
}

func (m *MockCloudWatchAPI) ListDashboardsRequest(v0 *cloudwatch.ListDashboardsInput) (*request.Request, *cloudwatch.ListDashboardsOutput) {
	m.mutex.RLock()
	m._ListDashboardsRequestFuncCallHistory = append(m._ListDashboardsRequestFuncCallHistory, CloudWatchAPIListDashboardsRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.ListDashboardsRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) ListDashboardsRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._ListDashboardsRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) ListDashboardsRequestFuncCallParams() []CloudWatchAPIListDashboardsRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._ListDashboardsRequestFuncCallHistory
}

type CloudWatchAPIListDashboardsWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.ListDashboardsInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) ListDashboardsWithContext(v0 aws.Context, v1 *cloudwatch.ListDashboardsInput, v2 ...request.Option) (*cloudwatch.ListDashboardsOutput, error) {
	m.mutex.RLock()
	m._ListDashboardsWithContextFuncCallHistory = append(m._ListDashboardsWithContextFuncCallHistory, CloudWatchAPIListDashboardsWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.ListDashboardsWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) ListDashboardsWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._ListDashboardsWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) ListDashboardsWithContextFuncCallParams() []CloudWatchAPIListDashboardsWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._ListDashboardsWithContextFuncCallHistory
}

type CloudWatchAPIListMetricsParamSet struct {
	Arg0 *cloudwatch.ListMetricsInput
}

func (m *MockCloudWatchAPI) ListMetrics(v0 *cloudwatch.ListMetricsInput) (*cloudwatch.ListMetricsOutput, error) {
	m.mutex.RLock()
	m._ListMetricsFuncCallHistory = append(m._ListMetricsFuncCallHistory, CloudWatchAPIListMetricsParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.ListMetricsFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) ListMetricsFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._ListMetricsFuncCallHistory)
}

func (m *MockCloudWatchAPI) ListMetricsFuncCallParams() []CloudWatchAPIListMetricsParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._ListMetricsFuncCallHistory
}

type CloudWatchAPIListMetricsPagesParamSet struct {
	Arg0 *cloudwatch.ListMetricsInput
	Arg1 func(*cloudwatch.ListMetricsOutput, bool) bool
}

func (m *MockCloudWatchAPI) ListMetricsPages(v0 *cloudwatch.ListMetricsInput, v1 func(*cloudwatch.ListMetricsOutput, bool) bool) error {
	m.mutex.RLock()
	m._ListMetricsPagesFuncCallHistory = append(m._ListMetricsPagesFuncCallHistory, CloudWatchAPIListMetricsPagesParamSet{v0, v1})
	m.mutex.RUnlock()
	r0 := m.ListMetricsPagesFunc(v0, v1)
	return r0
}

func (m *MockCloudWatchAPI) ListMetricsPagesFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._ListMetricsPagesFuncCallHistory)
}

func (m *MockCloudWatchAPI) ListMetricsPagesFuncCallParams() []CloudWatchAPIListMetricsPagesParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._ListMetricsPagesFuncCallHistory
}

type CloudWatchAPIListMetricsPagesWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.ListMetricsInput
	Arg2 func(*cloudwatch.ListMetricsOutput, bool) bool
	Arg3 []request.Option
}

func (m *MockCloudWatchAPI) ListMetricsPagesWithContext(v0 aws.Context, v1 *cloudwatch.ListMetricsInput, v2 func(*cloudwatch.ListMetricsOutput, bool) bool, v3 ...request.Option) error {
	m.mutex.RLock()
	m._ListMetricsPagesWithContextFuncCallHistory = append(m._ListMetricsPagesWithContextFuncCallHistory, CloudWatchAPIListMetricsPagesWithContextParamSet{v0, v1, v2, v3})
	m.mutex.RUnlock()
	r0 := m.ListMetricsPagesWithContextFunc(v0, v1, v2, v3...)
	return r0
}

func (m *MockCloudWatchAPI) ListMetricsPagesWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._ListMetricsPagesWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) ListMetricsPagesWithContextFuncCallParams() []CloudWatchAPIListMetricsPagesWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._ListMetricsPagesWithContextFuncCallHistory
}

type CloudWatchAPIListMetricsRequestParamSet struct {
	Arg0 *cloudwatch.ListMetricsInput
}

func (m *MockCloudWatchAPI) ListMetricsRequest(v0 *cloudwatch.ListMetricsInput) (*request.Request, *cloudwatch.ListMetricsOutput) {
	m.mutex.RLock()
	m._ListMetricsRequestFuncCallHistory = append(m._ListMetricsRequestFuncCallHistory, CloudWatchAPIListMetricsRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.ListMetricsRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) ListMetricsRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._ListMetricsRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) ListMetricsRequestFuncCallParams() []CloudWatchAPIListMetricsRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._ListMetricsRequestFuncCallHistory
}

type CloudWatchAPIListMetricsWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.ListMetricsInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) ListMetricsWithContext(v0 aws.Context, v1 *cloudwatch.ListMetricsInput, v2 ...request.Option) (*cloudwatch.ListMetricsOutput, error) {
	m.mutex.RLock()
	m._ListMetricsWithContextFuncCallHistory = append(m._ListMetricsWithContextFuncCallHistory, CloudWatchAPIListMetricsWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.ListMetricsWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) ListMetricsWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._ListMetricsWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) ListMetricsWithContextFuncCallParams() []CloudWatchAPIListMetricsWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._ListMetricsWithContextFuncCallHistory
}

type CloudWatchAPIPutDashboardParamSet struct {
	Arg0 *cloudwatch.PutDashboardInput
}

func (m *MockCloudWatchAPI) PutDashboard(v0 *cloudwatch.PutDashboardInput) (*cloudwatch.PutDashboardOutput, error) {
	m.mutex.RLock()
	m._PutDashboardFuncCallHistory = append(m._PutDashboardFuncCallHistory, CloudWatchAPIPutDashboardParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.PutDashboardFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) PutDashboardFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._PutDashboardFuncCallHistory)
}

func (m *MockCloudWatchAPI) PutDashboardFuncCallParams() []CloudWatchAPIPutDashboardParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._PutDashboardFuncCallHistory
}

type CloudWatchAPIPutDashboardRequestParamSet struct {
	Arg0 *cloudwatch.PutDashboardInput
}

func (m *MockCloudWatchAPI) PutDashboardRequest(v0 *cloudwatch.PutDashboardInput) (*request.Request, *cloudwatch.PutDashboardOutput) {
	m.mutex.RLock()
	m._PutDashboardRequestFuncCallHistory = append(m._PutDashboardRequestFuncCallHistory, CloudWatchAPIPutDashboardRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.PutDashboardRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) PutDashboardRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._PutDashboardRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) PutDashboardRequestFuncCallParams() []CloudWatchAPIPutDashboardRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._PutDashboardRequestFuncCallHistory
}

type CloudWatchAPIPutDashboardWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.PutDashboardInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) PutDashboardWithContext(v0 aws.Context, v1 *cloudwatch.PutDashboardInput, v2 ...request.Option) (*cloudwatch.PutDashboardOutput, error) {
	m.mutex.RLock()
	m._PutDashboardWithContextFuncCallHistory = append(m._PutDashboardWithContextFuncCallHistory, CloudWatchAPIPutDashboardWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.PutDashboardWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) PutDashboardWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._PutDashboardWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) PutDashboardWithContextFuncCallParams() []CloudWatchAPIPutDashboardWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._PutDashboardWithContextFuncCallHistory
}

type CloudWatchAPIPutMetricAlarmParamSet struct {
	Arg0 *cloudwatch.PutMetricAlarmInput
}

func (m *MockCloudWatchAPI) PutMetricAlarm(v0 *cloudwatch.PutMetricAlarmInput) (*cloudwatch.PutMetricAlarmOutput, error) {
	m.mutex.RLock()
	m._PutMetricAlarmFuncCallHistory = append(m._PutMetricAlarmFuncCallHistory, CloudWatchAPIPutMetricAlarmParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.PutMetricAlarmFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) PutMetricAlarmFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._PutMetricAlarmFuncCallHistory)
}

func (m *MockCloudWatchAPI) PutMetricAlarmFuncCallParams() []CloudWatchAPIPutMetricAlarmParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._PutMetricAlarmFuncCallHistory
}

type CloudWatchAPIPutMetricAlarmRequestParamSet struct {
	Arg0 *cloudwatch.PutMetricAlarmInput
}

func (m *MockCloudWatchAPI) PutMetricAlarmRequest(v0 *cloudwatch.PutMetricAlarmInput) (*request.Request, *cloudwatch.PutMetricAlarmOutput) {
	m.mutex.RLock()
	m._PutMetricAlarmRequestFuncCallHistory = append(m._PutMetricAlarmRequestFuncCallHistory, CloudWatchAPIPutMetricAlarmRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.PutMetricAlarmRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) PutMetricAlarmRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._PutMetricAlarmRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) PutMetricAlarmRequestFuncCallParams() []CloudWatchAPIPutMetricAlarmRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._PutMetricAlarmRequestFuncCallHistory
}

type CloudWatchAPIPutMetricAlarmWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.PutMetricAlarmInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) PutMetricAlarmWithContext(v0 aws.Context, v1 *cloudwatch.PutMetricAlarmInput, v2 ...request.Option) (*cloudwatch.PutMetricAlarmOutput, error) {
	m.mutex.RLock()
	m._PutMetricAlarmWithContextFuncCallHistory = append(m._PutMetricAlarmWithContextFuncCallHistory, CloudWatchAPIPutMetricAlarmWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.PutMetricAlarmWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) PutMetricAlarmWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._PutMetricAlarmWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) PutMetricAlarmWithContextFuncCallParams() []CloudWatchAPIPutMetricAlarmWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._PutMetricAlarmWithContextFuncCallHistory
}

type CloudWatchAPIPutMetricDataParamSet struct {
	Arg0 *cloudwatch.PutMetricDataInput
}

func (m *MockCloudWatchAPI) PutMetricData(v0 *cloudwatch.PutMetricDataInput) (*cloudwatch.PutMetricDataOutput, error) {
	m.mutex.RLock()
	m._PutMetricDataFuncCallHistory = append(m._PutMetricDataFuncCallHistory, CloudWatchAPIPutMetricDataParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.PutMetricDataFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) PutMetricDataFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._PutMetricDataFuncCallHistory)
}

func (m *MockCloudWatchAPI) PutMetricDataFuncCallParams() []CloudWatchAPIPutMetricDataParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._PutMetricDataFuncCallHistory
}

type CloudWatchAPIPutMetricDataRequestParamSet struct {
	Arg0 *cloudwatch.PutMetricDataInput
}

func (m *MockCloudWatchAPI) PutMetricDataRequest(v0 *cloudwatch.PutMetricDataInput) (*request.Request, *cloudwatch.PutMetricDataOutput) {
	m.mutex.RLock()
	m._PutMetricDataRequestFuncCallHistory = append(m._PutMetricDataRequestFuncCallHistory, CloudWatchAPIPutMetricDataRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.PutMetricDataRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) PutMetricDataRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._PutMetricDataRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) PutMetricDataRequestFuncCallParams() []CloudWatchAPIPutMetricDataRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._PutMetricDataRequestFuncCallHistory
}

type CloudWatchAPIPutMetricDataWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.PutMetricDataInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) PutMetricDataWithContext(v0 aws.Context, v1 *cloudwatch.PutMetricDataInput, v2 ...request.Option) (*cloudwatch.PutMetricDataOutput, error) {
	m.mutex.RLock()
	m._PutMetricDataWithContextFuncCallHistory = append(m._PutMetricDataWithContextFuncCallHistory, CloudWatchAPIPutMetricDataWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.PutMetricDataWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) PutMetricDataWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._PutMetricDataWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) PutMetricDataWithContextFuncCallParams() []CloudWatchAPIPutMetricDataWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._PutMetricDataWithContextFuncCallHistory
}

type CloudWatchAPISetAlarmStateParamSet struct {
	Arg0 *cloudwatch.SetAlarmStateInput
}

func (m *MockCloudWatchAPI) SetAlarmState(v0 *cloudwatch.SetAlarmStateInput) (*cloudwatch.SetAlarmStateOutput, error) {
	m.mutex.RLock()
	m._SetAlarmStateFuncCallHistory = append(m._SetAlarmStateFuncCallHistory, CloudWatchAPISetAlarmStateParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.SetAlarmStateFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) SetAlarmStateFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._SetAlarmStateFuncCallHistory)
}

func (m *MockCloudWatchAPI) SetAlarmStateFuncCallParams() []CloudWatchAPISetAlarmStateParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._SetAlarmStateFuncCallHistory
}

type CloudWatchAPISetAlarmStateRequestParamSet struct {
	Arg0 *cloudwatch.SetAlarmStateInput
}

func (m *MockCloudWatchAPI) SetAlarmStateRequest(v0 *cloudwatch.SetAlarmStateInput) (*request.Request, *cloudwatch.SetAlarmStateOutput) {
	m.mutex.RLock()
	m._SetAlarmStateRequestFuncCallHistory = append(m._SetAlarmStateRequestFuncCallHistory, CloudWatchAPISetAlarmStateRequestParamSet{v0})
	m.mutex.RUnlock()
	r0, r1 := m.SetAlarmStateRequestFunc(v0)
	return r0, r1
}

func (m *MockCloudWatchAPI) SetAlarmStateRequestFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._SetAlarmStateRequestFuncCallHistory)
}

func (m *MockCloudWatchAPI) SetAlarmStateRequestFuncCallParams() []CloudWatchAPISetAlarmStateRequestParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._SetAlarmStateRequestFuncCallHistory
}

type CloudWatchAPISetAlarmStateWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.SetAlarmStateInput
	Arg2 []request.Option
}

func (m *MockCloudWatchAPI) SetAlarmStateWithContext(v0 aws.Context, v1 *cloudwatch.SetAlarmStateInput, v2 ...request.Option) (*cloudwatch.SetAlarmStateOutput, error) {
	m.mutex.RLock()
	m._SetAlarmStateWithContextFuncCallHistory = append(m._SetAlarmStateWithContextFuncCallHistory, CloudWatchAPISetAlarmStateWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0, r1 := m.SetAlarmStateWithContextFunc(v0, v1, v2...)
	return r0, r1
}

func (m *MockCloudWatchAPI) SetAlarmStateWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._SetAlarmStateWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) SetAlarmStateWithContextFuncCallParams() []CloudWatchAPISetAlarmStateWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._SetAlarmStateWithContextFuncCallHistory
}

type CloudWatchAPIWaitUntilAlarmExistsParamSet struct {
	Arg0 *cloudwatch.DescribeAlarmsInput
}

func (m *MockCloudWatchAPI) WaitUntilAlarmExists(v0 *cloudwatch.DescribeAlarmsInput) error {
	m.mutex.RLock()
	m._WaitUntilAlarmExistsFuncCallHistory = append(m._WaitUntilAlarmExistsFuncCallHistory, CloudWatchAPIWaitUntilAlarmExistsParamSet{v0})
	m.mutex.RUnlock()
	r0 := m.WaitUntilAlarmExistsFunc(v0)
	return r0
}

func (m *MockCloudWatchAPI) WaitUntilAlarmExistsFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._WaitUntilAlarmExistsFuncCallHistory)
}

func (m *MockCloudWatchAPI) WaitUntilAlarmExistsFuncCallParams() []CloudWatchAPIWaitUntilAlarmExistsParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._WaitUntilAlarmExistsFuncCallHistory
}

type CloudWatchAPIWaitUntilAlarmExistsWithContextParamSet struct {
	Arg0 aws.Context
	Arg1 *cloudwatch.DescribeAlarmsInput
	Arg2 []request.WaiterOption
}

func (m *MockCloudWatchAPI) WaitUntilAlarmExistsWithContext(v0 aws.Context, v1 *cloudwatch.DescribeAlarmsInput, v2 ...request.WaiterOption) error {
	m.mutex.RLock()
	m._WaitUntilAlarmExistsWithContextFuncCallHistory = append(m._WaitUntilAlarmExistsWithContextFuncCallHistory, CloudWatchAPIWaitUntilAlarmExistsWithContextParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	r0 := m.WaitUntilAlarmExistsWithContextFunc(v0, v1, v2...)
	return r0
}

func (m *MockCloudWatchAPI) WaitUntilAlarmExistsWithContextFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._WaitUntilAlarmExistsWithContextFuncCallHistory)
}

func (m *MockCloudWatchAPI) WaitUntilAlarmExistsWithContextFuncCallParams() []CloudWatchAPIWaitUntilAlarmExistsWithContextParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._WaitUntilAlarmExistsWithContextFuncCallHistory
}
