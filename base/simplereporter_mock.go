// Code generated by github.com/efritz/go-mockgen; DO NOT EDIT.
// This file was generated by robots at
// 2018-10-15T13:51:13-05:00
// using the command
// $ go-mockgen github.com/efritz/imperial/base -i SimpleReporter -f

package base

import "sync"

type MockSimpleReporter struct {
	ReportFunc               func(string, float64, ...ConfigFunc)
	_ReportFuncCallHistory   []SimpleReporterReportParamSet
	ShutdownFunc             func()
	_ShutdownFuncCallHistory []SimpleReporterShutdownParamSet
	mutex                    sync.RWMutex
}

func NewMockSimpleReporter() *MockSimpleReporter {
	return &MockSimpleReporter{ReportFunc: func(string, float64, ...ConfigFunc) {
		return
	}, ShutdownFunc: func() {
		return
	}}
}

type SimpleReporterReportParamSet struct {
	Arg0 string
	Arg1 float64
	Arg2 []ConfigFunc
}

func (m *MockSimpleReporter) Report(v0 string, v1 float64, v2 ...ConfigFunc) {
	m.mutex.RLock()
	m._ReportFuncCallHistory = append(m._ReportFuncCallHistory, SimpleReporterReportParamSet{v0, v1, v2})
	m.mutex.RUnlock()
	m.ReportFunc(v0, v1, v2...)
	return
}

func (m *MockSimpleReporter) ReportFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._ReportFuncCallHistory)
}

func (m *MockSimpleReporter) ReportFuncCallParams() []SimpleReporterReportParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._ReportFuncCallHistory
}

type SimpleReporterShutdownParamSet struct{}

func (m *MockSimpleReporter) Shutdown() {
	m.mutex.RLock()
	m._ShutdownFuncCallHistory = append(m._ShutdownFuncCallHistory, SimpleReporterShutdownParamSet{})
	m.mutex.RUnlock()
	m.ShutdownFunc()
	return
}

func (m *MockSimpleReporter) ShutdownFuncCallCount() int {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return len(m._ShutdownFuncCallHistory)
}

func (m *MockSimpleReporter) ShutdownFuncCallParams() []SimpleReporterShutdownParamSet {
	m.mutex.RLock()
	defer m.mutex.RUnlock()
	return m._ShutdownFuncCallHistory
}
